DROP TABLE Bandy CASCADE CONSTRAINTS; 
DROP TABLE Funkcje CASCADE CONSTRAINTS; 
DROP TABLE Kocury CASCADE CONSTRAINTS; 
DROP TABLE Wrogowie CASCADE CONSTRAINTS; 
DROP TABLE Wrogowie_kocurow CASCADE CONSTRAINTS; 
 
ALTER SESSION SET NLS_DATE_FORMAT = 'YYYY-MM-DD';
 
CREATE TABLE Bandy( 
    nr_bandy    NUMBER(2)       CONSTRAINT nrb_nb_pk PRIMARY KEY, 
    nazwa       VARCHAR2(20)    CONSTRAINT naz_vc_nn NOT NULL, 
    teren       VARCHAR2(15)    CONSTRAINT ter_vc_un UNIQUE, 
    szef_bandy  VARCHAR2(15)    CONSTRAINT sze_vc_un UNIQUE 
); 
 
CREATE TABLE Funkcje( 
    funkcja     VARCHAR2(10)    CONSTRAINT fun_vc_pk     PRIMARY KEY,  
    min_myszy   NUMBER(3)       CONSTRAINT mim_nb_ch     CHECK(min_myszy > 5), 
    max_myszy   NUMBER(3)       CONSTRAINT mam_nb_ch_max CHECK(max_myszy < 200), 
    CONSTRAINT mam_nb_ch_min CHECK(max_myszy >= min_myszy) 
); 
 
CREATE TABLE Wrogowie( 
    imie_wroga          VARCHAR2(15)    CONSTRAINT imw_vc_pk PRIMARY KEY,  
    stopien_wrogosci    NUMBER(2)       CONSTRAINT stw_nb_ch CHECK(stopien_wrogosci 
BETWEEN 1 AND 10), 
    gatunek             VARCHAR2(15), 
    lapowka             VARCHAR2(20) 
); 
 
CREATE TABLE Kocury( 
    imie            VARCHAR2(15)    CONSTRAINT imi_vc_nn NOT NULL,  
    plec            VARCHAR2(1)       CONSTRAINT ple_nb_ch CHECK(plec IN ('M', 'D')), 
    pseudo          VARCHAR2(15)    CONSTRAINT pse_vc_pk PRIMARY KEY,      
    funkcja         VARCHAR2(20)    CONSTRAINT fun_vc_re REFERENCES Funkcje(funkcja), 
    szef            VARCHAR2(15)    CONSTRAINT sze_vc_re REFERENCES Kocury(pseudo), 
    w_stadku_od     DATE            DEFAULT SYSDATE, 
    przydzial_myszy NUMBER(3),        
    myszy_extra     NUMBER(3),        
    nr_bandy        NUMBER(2)       CONSTRAINT nrb_nb_re REFERENCES Bandy(nr_bandy) 
); 
 
CREATE TABLE Wrogowie_kocurow( 
    pseudo          VARCHAR2(15)    CONSTRAINT pse_vc_re REFERENCES Kocury(pseudo),  
    imie_wroga      VARCHAR2(15)    CONSTRAINT imw_vc_re REFERENCES Wrogowie(imie_wroga),  
    data_incydentu  DATE            CONSTRAINT din_da_nn NOT NULL, 
    opis_incydentu  VARCHAR2(50), 
    CONSTRAINT wro_sk_pk PRIMARY KEY (pseudo, imie_wroga) 
); 
 
ALTER TABLE Kocury DISABLE CONSTRAINT sze_vc_re; 
 --Inserting data-- 
 
INSERT ALL 
    INTO Bandy VALUES (1, 'SZEFOSTWO', 'CALOSC', 'TYGRYS') 
    INTO Bandy VALUES (2, 'CZARNI RYCERZE', 'POLE', 'LYSY') 
    INTO Bandy VALUES (3, 'BIALI LOWCY', 'SAD', 'ZOMBI') 
    INTO Bandy VALUES (4, 'LACIACI MYSLIWI', 'GORKA', 'RAFA') 
    INTO Bandy VALUES (5, 'ROCKERSI', 'ZAGRODA', NULL) 
SELECT * FROM Dual; 
 
INSERT ALL 
    INTO Funkcje VALUES ('SZEFUNIO', 90, 110) 
    INTO Funkcje VALUES ('BANDZIOR', 70, 90) 
    INTO Funkcje VALUES ('LOWCZY', 60, 70) 
    INTO Funkcje VALUES ('LAPACZ', 50, 60) 
    INTO Funkcje VALUES ('KOT', 40, 50) 
    INTO Funkcje VALUES ('MILUSIA', 20, 30) 
    INTO Funkcje VALUES ('DZIELCZY', 45, 55) 
    INTO Funkcje VALUES ('HONOROWA', 6, 25) 
SELECT * FROM dual; 
 
INSERT ALL 
    INTO Wrogowie VALUES ('KAZIO', 10, 'CZLOWIEK', 'FLASZKA') 
    INTO Wrogowie VALUES ('GLUPIA ZOSKA', 1, 'CZLOWIEK', 'KORALIK') 
    INTO Wrogowie VALUES ('SWAWOLNY DYZIO', 7, 'CZLOWIEK', 'GUMA DO ZUCIA') 
    INTO Wrogowie VALUES ('BUREK', 4, 'PIES', 'KOSC') 
    INTO Wrogowie VALUES ('DZIKI BILL', 10, 'PIES', NULL) 
    INTO Wrogowie VALUES ('REKSIO', 2, 'PIES', 'KOSC') 
    INTO Wrogowie VALUES ('BETHOVEN', 1, 'PIES', 'PEDIGRIPALL') 
    INTO Wrogowie VALUES ('CHYTRUSEK', 5, 'LIS', 'KURCZAK') 
    INTO Wrogowie VALUES ('SMUKLA', 1, 'SOSNA', NULL) 
    INTO Wrogowie VALUES ('BAZYLI', 3, 'KOGUT', 'KURA DO STADA') 
SELECT * FROM dual; 
 
INSERT ALL 
    INTO Kocury VALUES ('JACEK', 'M', 'PLACEK', 'LOWCZY', 'LYSY', '2008-12-01', 67, NULL, 2) 
    INTO Kocury VALUES ('BARI', 'M', 'RURA', 'LAPACZ', 'LYSY', '2009-09-01', 56, NULL, 2) 
    INTO Kocury VALUES ('MICKA', 'D', 'LOLA', 'MILUSIA', 'TYGRYS', '2009-10-14', 25, 47, 1) 
    INTO Kocury VALUES ('LUCEK', 'M', 'ZERO', 'KOT', 'KURKA', '2010-03-01', 43, NULL, 3) 
    INTO Kocury VALUES ('SONIA', 'D', 'PUSZYSTA', 'MILUSIA', 'ZOMBI', '2010-11-18', 20, 35, 3) 
    INTO Kocury VALUES ('LATKA', 'D', 'UCHO', 'KOT', 'RAFA', '2011-01-01', 40, NULL, 4) 
    INTO Kocury VALUES ('DUDEK', 'M', 'MALY', 'KOT', 'RAFA', '2011-05-15', 40, NULL, 4) 
    INTO Kocury VALUES ('MRUCZEK', 'M', 'TYGRYS', 'SZEFUNIO', NULL, '2002-01-01', 103, 33, 1) 
    INTO Kocury VALUES ('CHYTRY', 'M', 'BOLEK', 'DZIELCZY', 'TYGRYS', '2002-05-05', 50, NULL, 1) 
    INTO Kocury VALUES ('KOREK', 'M', 'ZOMBI', 'BANDZIOR', 'TYGRYS', '2004-03-16', 75, 13, 3) 
    INTO Kocury VALUES ('BOLEK', 'M', 'LYSY', 'BANDZIOR', 'TYGRYS', '2006-08-15', 72, 21, 2) 
    INTO Kocury VALUES ('ZUZIA', 'D', 'SZYBKA', 'LOWCZY', 'LYSY', '2006-07-21', 65, NULL, 2) 
    INTO Kocury VALUES ('RUDA', 'D', 'MALA', 'MILUSIA', 'TYGRYS', '2006-09-17', 22, 42, 1) 
    INTO Kocury VALUES ('PUCEK', 'M', 'RAFA', 'LOWCZY', 'TYGRYS', '2006-10-15', 65, NULL, 4) 
    INTO Kocury VALUES ('PUNIA', 'D', 'KURKA', 'LOWCZY', 'ZOMBI', '2008-01-01', 61, NULL, 3) 
    INTO Kocury VALUES ('BELA', 'D', 'LASKA', 'MILUSIA', 'LYSY', '2008-02-01', 24, 28, 2) 
    INTO Kocury VALUES ('KSAWERY', 'M', 'MAN', 'LAPACZ', 'RAFA', '2008-07-12', 51, NULL, 4) 
    INTO Kocury VALUES ('MELA', 'D', 'DAMA', 'LAPACZ', 'RAFA', '2008-11-01', 51, NULL, 4) 
SELECT * FROM dual; 
 
ALTER TABLE Kocury ENABLE CONSTRAINT sze_vc_re; 
 
INSERT ALL 
    INTO Wrogowie_kocurow VALUES ('TYGRYS', 'KAZIO', '2004-10-13', 'USILOWAL NABIC NA 
WIDLY') 
    INTO Wrogowie_kocurow VALUES ('ZOMBI', 'SWAWOLNY DYZIO', '2005-03-07', 'WYBIL OKO Z 
PROCY') 
    INTO Wrogowie_kocurow VALUES ('BOLEK', 'KAZIO', '2005-03-29', 'POSZCZUL BURKIEM') 
    INTO Wrogowie_kocurow VALUES ('SZYBKA', 'GLUPIA ZOSKA', '2006-09-12', 'UZYLA KOTA JAKO 
SCIERKI') 
    INTO Wrogowie_kocurow VALUES ('MALA', 'CHYTRUSEK', '2007-03-07', 'ZALECAL SIE') 
    INTO Wrogowie_kocurow VALUES ('TYGRYS', 'DZIKI BILL', '2007-06-12', 'USILOWAL POZBAWIC 
ZYCIA') 
    INTO Wrogowie_kocurow VALUES ('BOLEK', 'DZIKI BILL', '2007-11-10', 'ODGRYZL UCHO') 
    INTO Wrogowie_kocurow VALUES ('LASKA', 'DZIKI BILL', '2008-12-12', 'POGRYZL ZE LEDWO SIE 
WYLIZALA') 
    INTO Wrogowie_kocurow VALUES ('LASKA', 'KAZIO', '2009-01-07', 'ZLAPAL ZA OGON I ZROBIL 
WIATRAK') 
INTO Wrogowie_kocurow VALUES ('DAMA', 'KAZIO', '2009-02-07', 'CHCIAL OBEDRZEC ZE 
SKORY') 
INTO Wrogowie_kocurow VALUES ('MAN', 'REKSIO', '2009-04-14', 'WYJATKOWO NIEGRZECZNIE 
OBSZCZEKAL') 
INTO Wrogowie_kocurow VALUES ('LYSY', 'BETHOVEN', '2009-05-11', 'NIE PODZIELIL SIE 
SWOJA KASZA') 
INTO Wrogowie_kocurow VALUES ('RURA', 'DZIKI BILL', '2009-09-03', 'ODGRYZL OGON') 
INTO Wrogowie_kocurow VALUES ('PLACEK', 'BAZYLI', '2010-07-12', 'DZIOBIAC UNIEMOZLIWIL 
PODEBRANIE KURCZAKA') 
INTO Wrogowie_kocurow VALUES ('PUSZYSTA', 'SMUKLA', '2010-11-19', 'OBRZUCILA 
SZYSZKAMI') 
INTO Wrogowie_kocurow VALUES ('KURKA', 'BUREK', '2010-12-14', 'POGONIL') 
INTO Wrogowie_kocurow VALUES ('MALY', 'CHYTRUSEK', '2011-07-13', 'PODEBRAL 
PODEBRANE JAJKA') 
INTO Wrogowie_kocurow VALUES ('UCHO', 'SWAWOLNY DYZIO', '2011-07-14', 'OBRZUCIL 
KAMIENIAMI') 
SELECT * FROM dual;
--End of insertion-- 

--17--
SELECT pseudo "POLUJE W POLU", przydzial_myszy "PRZYDZIAL MYSZY", nazwa "BANDA"
FROM Kocury
JOIN Bandy
ON Kocury.nr_bandy = Bandy.nr_bandy
WHERE teren IN('POLE', 'CALOSC') AND przydzial_myszy > 50
ORDER BY przydzial_myszy DESC;

--18--
SELECT kocury2.imie "IMIE", kocury2.w_stadku_od "POLUJE OD"
FROM Kocury kocury1
JOIN Kocury kocury2
ON kocury1.imie = 'JACEK'
WHERE kocury1.w_stadku_od > kocury2.w_stadku_od
ORDER BY kocury2.w_stadku_od DESC;

--19a--
SELECT kocury.imie "Imie", kocury.funkcja "Funkcja", kocury1.imie "Szef 1", kocury2.imie "Szef 2", kocury3.imie "Szef 3"
FROM Kocury kocury
LEFT JOIN Kocury kocury1
ON kocury.szef = kocury1.pseudo
LEFT JOIN Kocury kocury2
ON kocury1.szef = kocury2.pseudo
LEFT JOIN Kocury kocury3
ON kocury2.szef = kocury3.pseudo
WHERE kocury.funkcja IN ('KOT','MILUSIA');

--19b--
WITH Hierarchia AS (
    SELECT CONNECT_BY_ROOT imie "Imie", imie szef, CONNECT_BY_ROOT funkcja "Funkcja", LEVEL AS "Poziom"
    FROM Kocury
    CONNECT BY PRIOR szef = pseudo
    START WITH funkcja IN ('KOT', 'MILUSIA')
)
SELECT *
FROM Hierarchia
PIVOT (
    MIN(szef)
    FOR "Poziom"
    IN (2 "Szef 1", 3 "Szef 2", 4 "Szef 3")
);

--19c--
SELECT 
    CONNECT_BY_ROOT imie "Imie", 
    CONNECT_BY_ROOT funkcja "Funkcja",
    REPLACE(SYS_CONNECT_BY_PATH(imie, ' | '), ' | ' || CONNECT_BY_ROOT imie || ' ' , '') "Imiona kolejnych szefów"
FROM Kocury
WHERE szef IS NULL
CONNECT BY PRIOR szef = pseudo
START WITH funkcja IN ('KOT','MILUSIA');

--20--
SELECT imie "Imie kotki", nazwa "Nazwa bandy", wrogowie.imie_wroga "Imie wroga", stopien_wrogosci "Ocena wroga", data_incydentu "Data inc."
FROM Kocury kocury
LEFT JOIN Bandy bandy
ON kocury.nr_bandy = bandy.nr_bandy
LEFT JOIN wrogowie_kocurow wrogowie_k
ON kocury.pseudo = wrogowie_k.pseudo
LEFT JOIN Wrogowie wrogowi
ON wrogowie_k.imie_wroga = wrogowie.imie_wroga
WHERE plec = 'D' AND data_incydentu > '2007-01-01'
ORDER BY imie;

--21--
SELECT nazwa "Nazwa Bandy", COUNT(DISTINCT kocury.pseudo)  "Koty z wrogami"
FROM Kocury kocury
JOIN Bandy bandy
ON kocury.nr_bandy = bandy.nr_bandy
JOIN wrogowie_kocurow wrogowie_k
ON kocury.pseudo = wrogowie_k.pseudo
GROUP BY nazwa;

--22--
SELECT MIN(funkcja) "Funkcja", pseudo "Pseudonim kota", COUNT(pseudo) "Liczba wrogow"
FROM Kocury
NATURAL JOIN Wrogowie_kocurow
GROUP BY pseudo
HAVING COUNT(pseudo) >= 2;

--23--
SELECT imie, 12*(NVL(przydzial_myszy,0) + NVL(myszy_extra,0)) "DAWKA ROCZNA", 'powyżej 864' "DAWKA"
FROM Kocury
WHERE 12*(NVL(przydzial_myszy,0) + NVL(myszy_extra,0)) > 864 AND myszy_extra IS NOT NULL
UNION
SELECT imie, 12*(NVL(przydzial_myszy,0) + NVL(myszy_extra,0)) "DAWKA ROCZNA", '864' "DAWKA"
FROM Kocury
WHERE 12*(NVL(przydzial_myszy,0) + NVL(myszy_extra,0)) = 864 AND myszy_extra IS NOT NULL
UNION
SELECT imie, 12*(NVL(przydzial_myszy,0) + NVL(myszy_extra,0)) "DAWKA ROCZNA", 'poniżej 864' "DAWKA"
FROM Kocury
WHERE 12*(NVL(przydzial_myszy,0) + NVL(myszy_extra,0)) < 864 AND myszy_extra IS NOT NULL
ORDER BY "DAWKA ROCZNA" DESC;

--24a--
SELECT bandy.nr_bandy "NR BANDY", nazwa, teren
FROM Bandy bandy
LEFT JOIN Kocury kocury
ON bandy.nr_bandy = kocury.nr_bandy
WHERE pseudo IS NULL;

--24b--
SELECT nr_bandy "NR BANDY" , nazwa, teren
FROM Bandy
MINUS
SELECT DISTINCT bandy.nr_bandy, nazwa, teren
FROM Bandy bandy
JOIN Kocury kocury
ON bandy.nr_bandy = kocury.nr_bandy;

--25--
SELECT imie, funkcja, NVL(przydzial_myszy, 0) "PRZYDZIAL MYSZY"
FROM Kocury
WHERE NVL(przydzial_myszy,0) >= ALL 
(
    SELECT 3*NVL(przydzial_myszy,0)
    FROM Kocury kocury
    JOIN Bandy bandy
    ON kocury.nr_bandy = bandy.nr_bandy
    WHERE funkcja = 'MILUSIA' AND teren IN('SAD','CALOSC')
);

--26--
SELECT funkcja "Funkcja", ROUND(AVG(NVL(przydzial_myszy,0) + NVL(myszy_extra,0))) "Srednio najw. i najm. myszy"
FROM Kocury
WHERE funkcja != 'SZEFUNIO'
GROUP BY funkcja
HAVING ROUND(AVG(NVL(przydzial_myszy,0) + NVL(myszy_extra,0)))
IN
(
    (
    SELECT MIN(ROUND(AVG(NVL(przydzial_myszy,0) + NVL(myszy_extra, 0))))
    FROM Kocury
    WHERE funkcja != 'SZEFUNIO'
    GROUP BY funkcja
    ),
    (
    SELECT MAX(ROUND(AVG(NVL(przydzial_myszy, 0) + NVL(myszy_extra, 0))))
    FROM Kocury
    WHERE funkcja != 'SZEFUNIO'
    GROUP BY funkcja
    )
);

--wartosc n do 27--
DEFINE n = &n;

--27a--
SELECT pseudo, NVL(przydzial_myszy, 0) + NVL(myszy_extra, 0) "ZJADA"
FROM  Kocury kocury1
WHERE &n >
(
    SELECT COUNT(DISTINCT (NVL(przydzial_myszy, 0) + NVL(myszy_extra, 0)))
    FROM Kocury
    WHERE (NVL(kocury1.przydzial_myszy, 0) + NVL(kocury1.myszy_extra, 0)) < (NVL(przydzial_myszy, 0) + NVL(myszy_extra, 0))
)
ORDER BY "ZJADA" DESC;

--27b--
SELECT pseudo, NVL(przydzial_myszy, 0) + NVL(myszy_extra, 0) "ZJADA"
FROM  Kocury kocury1
WHERE NVL(przydzial_myszy, 0) + NVL(myszy_extra, 0)
IN 
(
    SELECT *
    FROM 
    (
        SELECT DISTINCT NVL(przydzial_myszy, 0) + NVL(myszy_extra, 0)
        FROM Kocury
        ORDER BY 1 DESC
    )
    WHERE ROWNUM <= &n
);

--27c--
SELECT kocury1.pseudo, MIN(NVL(kocury1.przydzial_myszy, 0) + NVL(kocury1.myszy_extra, 0)) "ZJADA"
FROM Kocury kocury1
JOIN Kocury kocury2
ON NVL(kocury1.przydzial_myszy,0) + NVL(kocury1.myszy_extra, 0) <= NVL(kocury2.przydzial_myszy, 0) + NVL(kocury2.myszy_extra, 0)
GROUP BY kocury1.pseudo
HAVING COUNT(DISTINCT NVL(kocury2.przydzial_myszy, 0) + NVL(kocury2.myszy_extra, 0)) <= &n
ORDER BY "ZJADA" DESC;

--27d--
SELECT pseudo, "ZJADA"
FROM 
(
    SELECT pseudo, (NVL(przydzial_myszy,0) + NVL(myszy_extra,0)) "ZJADA",
    RANK() over (ORDER BY NVL(przydzial_myszy,0) + NVL(myszy_extra,0) DESC ) pozycja
    FROM Kocury
)
WHERE pozycja <= &n;

--28--
SELECT TO_CHAR(EXTRACT(YEAR FROM w_stadku_od)) "ROK", COUNT(pseudo) "LICZBA WSTAPIEN"
FROM Kocury
GROUP BY EXTRACT(YEAR FROM w_stadku_od)
HAVING COUNT(pseudo)
IN
(
    (
        SELECT MAX(mniejsze)
        FROM
        (
            SELECT DISTINCT COUNT(pseudo) mniejsze
            FROM Kocury
            GROUP BY EXTRACT(YEAR FROM w_stadku_od)
            HAVING COUNT(pseudo) <
            (
                SELECT AVG(COUNT(EXTRACT(YEAR FROM w_stadku_od)))
                FROM Kocury
                GROUP BY EXTRACT(YEAR FROM w_stadku_od))
                ORDER BY COUNT(pseudo) DESC
            )
    ),
    (
        SELECT MIN(wieksze)
        FROM
        (
            SELECT DISTINCT COUNT(pseudo) wieksze
            FROM Kocury
            GROUP BY EXTRACT(YEAR FROM w_stadku_od)
            HAVING COUNT(pseudo) >
            (
                SELECT AVG(COUNT(EXTRACT(YEAR FROM w_stadku_od)))
                FROM Kocury
                GROUP BY EXTRACT(YEAR FROM w_stadku_od)
            )
            ORDER BY COUNT(pseudo)
        )
    )
)
UNION ALL
SELECT 'Srednia', ROUND(AVG(COUNT(pseudo)), 7)
FROM Kocury
GROUP BY TO_CHAR(EXTRACT(YEAR FROM w_stadku_od))
ORDER BY 2;

--29a--
SELECT kocury1.imie, MIN(NVL(kocury1.przydzial_myszy, 0) + NVL(kocury1.myszy_extra, 0)) "ZJADA",
    MIN(kocury1.nr_bandy), AVG(NVL(kocury2.przydzial_myszy, 0) + NVL(kocury2.myszy_extra, 0)) "SREDNIA BANDY"
FROM Kocury kocury1
JOIN Kocury kocury2
ON kocury1.nr_bandy = kocury2.nr_bandy
WHERE kocury1.plec = 'M'
GROUP BY kocury1.imie
HAVING MIN(NVL(kocury1.przydzial_myszy, 0) + NVL(kocury1.myszy_extra, 0)) < AVG(NVL(kocury2.przydzial_myszy, 0) + NVL(kocury2.myszy_extra, 0))
ORDER BY "SREDNIA BANDY" ASC;

--29b--
FROM.
SELECT  kocury1.imie, NVL(kocury1.przydzial_myszy, 0) + NVL(kocury1.myszy_extra, 0) "ZJADA", kocury1.nr_bandy, AVG "SREDNIA BANDY"
FROM 
(
    SELECT nr_bandy nr_b, AVG(przydzial_myszy + NVL(myszy_extra,0)) "SREDNIA"
    FROM Kocury
    GROUP BY nr_bandy
)
JOIN  Kocury kocury1
ON kocury1.nr_bandy = nr_b
WHERE kocury1.plec = 'M' AND przydzial_myszy + NVL(myszy_extra, 0) < AVG
ORDER BY "SREDNIA BANDY" ASC;

--29c--
SELECT  imie, (przydzial_myszy + NVL(myszy_extra, 0)) "ZJADA", nr_bandy,
(
    SELECT AVG(przydzial_myszy + NVL(myszy_extra, 0)) "SREDNIA"
    FROM Kocury kocury1
    WHERE Kocury.nr_bandy = kocury1.nr_bandy
) "SREDNIA BANDY"
FROM Kocury
WHERE plec = 'M' AND (przydzial_myszy + NVL(myszy_extra, 0)) <
(
    SELECT AVG(przydzial_myszy + NVL(myszy_extra,0)) "SREDNIA"
    FROM Kocury kocury1
    WHERE Kocury.nr_bandy = kocury1.nr_bandy
);

--30--
SELECT imie, w_stadku_od "WSTAPIL DO STADKA", '<--- NAJMLODSZY STAZEM W BANDZIE ' || nazwa " "
FROM Kocury kocury1
JOIN Bandy bandy
ON kocury1.nr_bandy = bandy.nr_bandy
WHERE w_stadku_od =
(
    SELECT MAX(w_stadku_od)
    FROM Kocury
    WHERE nr_bandy = kocury1.nr_bandy
)
UNION ALL
SELECT imie, w_stadku_od "WSTAPIL DO STADKA", '<--- NAJSTARSZY STAZEM W BANDZIE ' || nazwa " "
FROM Kocury kocury1
JOIN Bandy bandy
ON kocury1.nr_bandy = bandy.nr_bandy
WHERE w_stadku_od =
(
    SELECT MIN(w_stadku_od)
    FROM Kocury
    WHERE nr_bandy = kocury1.nr_bandy
)
UNION ALL
SELECT imie, w_stadku_od "WSTAPIL DO STADKA", ' '
FROM Kocury kocury1
WHERE w_stadku_od NOT IN 
(
    (
        SELECT MIN(w_stadku_od)
        FROM Kocury
        WHERE nr_bandy = kocury1.nr_bandy
    ),
    (
        SELECT MAX(w_stadku_od)
        FROM Kocury
        WHERE nr_bandy = kocury1.nr_bandy
    )
)
ORDER BY imie;

--31--
CREATE VIEW O_Bandach (nazwa_bandy, sre_spoz, max_spoz, min_spoz, koty, koty_z_dod)
AS
SELECT nazwa, AVG(przydzial_myszy), MAX(przydzial_myszy), MIN(przydzial_myszy), COUNT(pseudo), COUNT(myszy_extra)
FROM Bandy bandy
JOIN Kocury kocury
ON bandy.nr_bandy = kocury.nr_bandy
GROUP BY nazwa;

SELECT * FROM O_Bandach;

SELECT pseudo "PSEUDONIM", imie, funkcja, przydzial_myszy "ZJADA",
       'OD ' || min_spoz || ' DO ' || max_spoz "GRANICE SPOZYCIA", w_stadku_od "LOWI OD"
FROM O_Bandach
JOIN Bandy bandy
ON nazwa_bandy = bandy.nazwa
JOIN Kocury kocury
ON bandy.nr_bandy = kocury.nr_bandy
WHERE pseudo = '&pseudo';

DROP VIEW O_Bandach;

--32--
SELECT pseudo "Pseudonim", plec "Plec", przydzial_myszy "Myszy przed podw.", NVL(myszy_extra, 0) "Extra przed podw."
FROM Kocury
LEFT JOIN Bandy bandy
ON Kocury.nr_bandy = bandy.nr_bandy
WHERE pseudo
IN
(
    SELECT pseudo
    FROM
    (
        SELECT pseudo
        FROM Kocury
        LEFT JOIN Bandy USING (nr_bandy)
        WHERE nazwa = 'CZARNI RYCERZE'
        ORDER BY w_stadku_od
    )
    WHERE ROWNUM <= 3
    UNION ALL
    SELECT pseudo
    FROM
    (
        SELECT pseudo
        FROM Kocury
        LEFT JOIN Bandy USING (nr_bandy)
        WHERE nazwa = 'LACIACI MYSLIWI'
        ORDER BY w_stadku_od
    )
    WHERE ROWNUM <= 3
);

--32 update--
UPDATE Kocury
SET przydzial_myszy = 
CASE plec
    WHEN 'D' THEN przydzial_myszy +
    (
        SELECT MIN(przydzial_myszy)
        FROM Kocury
    ) * 0.10
    WHEN 'M' THEN przydzial_myszy + 10
END,
myszy_extra = NVL(myszy_extra, 0) +
(
    SELECT AVG(NVL(myszy_extra, 0))
    FROM Kocury kocury1
    WHERE kocury1.nr_bandy = Kocury.nr_bandy
) * 0.15
WHERE pseudo
IN
(
    SELECT pseudo
    FROM
    (
        SELECT pseudo
        FROM Kocury
        LEFT JOIN Bandy USING (nr_bandy)
        WHERE nazwa = 'CZARNI RYCERZE'
        ORDER BY w_stadku_od
    )
    WHERE ROWNUM <= 3
    UNION ALL
    SELECT pseudo
    FROM
    (
        SELECT pseudo
        FROM Kocury
        LEFT JOIN Bandy USING (nr_bandy)
        WHERE nazwa = 'LACIACI MYSLIWI'
        ORDER BY w_stadku_od
    )
    WHERE ROWNUM <= 3
);

--32 po podwyzce--
SELECT pseudo "Pseudonim", plec "Plec", przydzial_myszy "Myszy po podw.", NVL(myszy_extra, 0) "Extra po podw."
FROM Kocury
LEFT JOIN Bandy bandy
ON Kocury.nr_bandy = bandy.nr_bandy
WHERE pseudo
IN
(
    SELECT pseudo
    FROM
    (
        SELECT pseudo
        FROM Kocury
        LEFT JOIN Bandy USING (nr_bandy)
        WHERE nazwa = 'CZARNI RYCERZE'
        ORDER BY w_stadku_od
    )
    WHERE ROWNUM <= 3
    UNION ALL
    SELECT pseudo
    FROM
    (
        SELECT pseudo
        FROM Kocury
        LEFT JOIN Bandy USING (nr_bandy)
        WHERE nazwa = 'LACIACI MYSLIWI'
        ORDER BY w_stadku_od
    )
    WHERE ROWNUM <= 3
);

--32 cofniecie--
ROLLBACK;

--33a--
SELECT DECODE(plec, 'Kotka', nazwa, '') "NAZWA BANDY", plec, ile, szefunio, bandzior, lowczy, lapacz, kot, milusia, dzielczy, suma
FROM
(
    SELECT nazwa,
        DECODE(plec, 'D', 'Kotka', 'Kocur') plec,
        TO_CHAR(COUNT(pseudo)) ile,
        TO_CHAR(SUM(DECODE(funkcja,'SZEFUNIO', NVL(przydzial_myszy, 0) + NVL(myszy_extra, 0), 0))) szefunio,
        TO_CHAR(SUM(DECODE(funkcja, 'BANDZIOR', NVL(przydzial_myszy,0) + NVL(myszy_extra, 0), 0))) bandzior,
        TO_CHAR(SUM(DECODE(funkcja, 'LOWCZY', NVL(przydzial_myszy, 0) + NVL(myszy_extra, 0), 0))) lowczy,
        TO_CHAR(SUM(DECODE(funkcja, 'LAPACZ', NVL(przydzial_myszy, 0) + NVL(myszy_extra, 0), 0))) lapacz,
        TO_CHAR(SUM(DECODE(funkcja, 'KOT', NVL(przydzial_myszy, 0) + NVL(myszy_extra, 0), 0))) kot,
        TO_CHAR(SUM(DECODE(funkcja, 'MILUSIA', NVL(przydzial_myszy, 0) + NVL(myszy_extra, 0), 0))) milusia,
        TO_CHAR(SUM(DECODE(funkcja, 'DZIELCZY', NVL(przydzial_myszy, 0) + NVL(myszy_extra, 0), 0))) dzielczy,
        TO_CHAR(SUM(NVL(przydzial_myszy, 0) + NVL(myszy_extra, 0))) suma
    FROM Kocury
    JOIN Bandy bandy
    ON Kocury.nr_bandy = Bandy.nr_bandy
    GROUP BY nazwa, plec
    ORDER BY 1, 2 DESC
)
UNION ALL
SELECT '---------------', '------', '-----', '---------', '----------', '--------', '--------', '-----', '--------', '---------', '-----'
FROM dual
UNION ALL
SELECT 'ZJADA RAZEM', '', '',
    TO_CHAR(SUM(DECODE(funkcja,'SZEFUNIO', NVL(przydzial_myszy, 0) + NVL(myszy_extra, 0), 0))) szefunio,
    TO_CHAR(SUM(DECODE(funkcja, 'BANDZIOR', NVL(przydzial_myszy,0) + NVL(myszy_extra, 0), 0))) bandzior,
    TO_CHAR(SUM(DECODE(funkcja, 'LOWCZY', NVL(przydzial_myszy, 0) + NVL(myszy_extra, 0), 0))) lowczy,
    TO_CHAR(SUM(DECODE(funkcja, 'LAPACZ', NVL(przydzial_myszy, 0) + NVL(myszy_extra, 0), 0))) lapacz,
    TO_CHAR(SUM(DECODE(funkcja, 'KOT', NVL(przydzial_myszy, 0) + NVL(myszy_extra, 0), 0))) kot,
    TO_CHAR(SUM(DECODE(funkcja, 'MILUSIA', NVL(przydzial_myszy, 0) + NVL(myszy_extra, 0), 0))) milusia,
    TO_CHAR(SUM(DECODE(funkcja, 'DZIELCZY', NVL(przydzial_myszy, 0) + NVL(myszy_extra, 0), 0))) dzielczy,
    TO_CHAR(SUM(NVL(przydzial_myszy, 0) + NVL(myszy_extra, 0))) suma
FROM Kocury;

--33b--
SELECT *
FROM
(
    SELECT TO_CHAR(DECODE(plec, 'D', nazwa, '')) "NAZWA BANDY",
        TO_CHAR(DECODE(plec, 'D', 'Kotka', 'Kocor')) plec,
        TO_CHAR(ile) ile,
        TO_CHAR(NVL(szefunio, 0)) szefunio,
        TO_CHAR(NVL(bandzior, 0)) bandzior,
        TO_CHAR(NVL(lowczy, 0)) lowczy,
        TO_CHAR(NVL(lapacz, 0)) lapacz,
        TO_CHAR(NVL(kot, 0)) kot,
        TO_CHAR(NVL(milusia, 0)) milusia,
        TO_CHAR(NVL(dzielczy, 0)) dzielczy,
        TO_CHAR(NVL(suma, 0)) suma
    FROM
    (
        SELECT nazwa, plec, funkcja, NVL(przydzial_myszy,0) + NVL(myszy_extra, 0) liczba
        FROM Kocury
        JOIN Bandy
        ON Kocury.nr_bandy = Bandy.nr_bandy
    )
    PIVOT
    (
        SUM(liczba)
        FOR funkcja
        IN('SZEFUNIO' szefunio, 'BANDZIOR' bandzior, 'LOWCZY' lowczy, 'LAPACZ' lapacz, 'KOT' kot, 'MILUSIA' milusia, 'DZIELCZY' dzielczy)
    )
    JOIN
    (
        SELECT nazwa "N", plec "P", COUNT(pseudo) ile, SUM(przydzial_myszy + NVL(myszy_extra, 0)) suma
        FROM Kocury kocury
        JOIN Bandy bandy
        ON kocury.nr_bandy = bandy.nr_bandy
        GROUP BY nazwa, plec
        ORDER BY nazwa, plec
    )
    ON P = plec AND N = nazwa
)
UNION ALL
SELECT '---------------', '------', '-----', '---------', '----------', '--------', '--------', '-----', '--------', '---------', '-----'
FROM dual
UNION ALL
SELECT  'ZJADA RAZEM','','',
    TO_CHAR(NVL(szefunio, 0)),
    TO_CHAR(NVL(bandzior, 0)),
    TO_CHAR(NVL(lowczy, 0)),
    TO_CHAR(NVL(lapacz, 0)),
    TO_CHAR(NVL(kot, 0)),
    TO_CHAR(NVL(milusia, 0)),
    TO_CHAR(NVL(dzielczy, 0)),
    TO_CHAR(NVL(suma, 0))
FROM
(
    SELECT funkcja, NVL(przydzial_myszy, 0) + NVL(myszy_extra, 0) liczba
    FROM Kocury
)
PIVOT
(
    SUM(liczba)
    FOR funkcja
    IN ('SZEFUNIO' szefunio, 'BANDZIOR' bandzior, 'LOWCZY' lowczy, 'LAPACZ' lapacz, 'KOT' kot, 'MILUSIA' milusia, 'DZIELCZY' dzielczy)
)
NATURAL JOIN
(
    SELECT SUM(NVL(przydzial_myszy, 0) + NVL(myszy_extra, 0)) suma
    FROM Kocury
);